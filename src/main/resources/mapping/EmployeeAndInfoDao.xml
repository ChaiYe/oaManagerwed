<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.officeAuto.ssm.dao.system.EmployeeAndInfoDao" >

    <resultMap id="BaseResultMap" type="com.officeAuto.ssm.model.EmployeeAndInfo">
        <result column="uuid" jdbcType="INTEGER" property="uuid" />
        <result column="account" jdbcType="VARCHAR" property="account" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="state" jdbcType="VARCHAR" property="state" />
        <result column="createtime" jdbcType="DATE" property="createtime" />
    </resultMap>

    <resultMap id="empAndInfoMap" type="com.officeAuto.ssm.model.EmployeeAndInfo" extends="BaseResultMap">
        <association property="employeeInfo" javaType="com.officeAuto.ssm.model.EmployeeInfo">
            <id column="id" jdbcType="INTEGER" property="id" />
            <result column="name" jdbcType="VARCHAR" property="name" />
            <result column="sex" jdbcType="VARCHAR" property="sex" />
            <result column="age" jdbcType="VARCHAR" property="age" />
            <result column="phone" jdbcType="VARCHAR" property="phone" />
            <result column="email" jdbcType="VARCHAR" property="email" />
            <result column="address" jdbcType="VARCHAR" property="address" />
            <result column="image" jdbcType="VARCHAR" property="image" />
        </association>
    </resultMap>

    <resultMap id="empAndJobsMap" type="com.officeAuto.ssm.model.EmployeeAndInfo" extends="empAndInfoMap">
        <collection property="jobs" ofType="com.officeAuto.ssm.model.JobQueryModel">
            <id column="job_uuid" jdbcType="INTEGER" property="uuid" />
            <result column="job_name" jdbcType="VARCHAR" property="name" />
            <result column="job_descript" jdbcType="LONGVARCHAR" property="descript" />
            <result column="authority" jdbcType="INTEGER" property="authority" />
            <result column="worktime" jdbcType="DATE" property="worktime" />
            <result column="dept" jdbcType="INTEGER" property="dept" />
            <result column="job_employee" jdbcType="INTEGER" property="employee" />
            <association property="depart" javaType="com.officeAuto.ssm.model.Dept">
                <result column="dept_uuid" jdbcType="INTEGER" property="uuid" />
                <result column="dept_name" jdbcType="VARCHAR" property="name" />
                <result column="dept_descript" jdbcType="LONGVARCHAR" property="descript" />
            </association>
        </collection>
    </resultMap>

    <select id="login" resultMap="empAndJobsMap">
        select employee.*, employeeinfo.*,
        job.uuid "job_uuid", job.name "job_name", job.descript "job_descript", job.authority, job.worktime, job.dept, job.employee "job_employee",
        dept.uuid "dept_uuid", dept.name "dept_name", dept.descript "dept_descript"
        from employee, employeeinfo, job, dept
        where employee.account = #{account}
              and employee.password = #{password}
              and employeeinfo.id = employee.uuid
              and job.employee = employee.uuid
              and job.dept = dept.uuid
    </select>

    <select id="getInfo" resultMap="empAndJobsMap">
        select employee.*, employeeinfo.*,
        job.uuid "job_uuid", job.name "job_name", job.descript "job_descript", job.authority, job.worktime, job.dept, job.employee "job_employee",
        dept.uuid "dept_uuid", dept.name "dept_name", dept.descript "dept_descript"
        from employee, employeeinfo, job, dept
        where employee.uuid = #{uuid}
              and employeeinfo.id = employee.uuid
              and job.employee = employee.uuid
              and job.dept = dept.uuid
        order by job.dept
    </select>

    <select id="findAll" resultMap="empAndInfoMap">
        select employee.*, employeeinfo.*
        from employee, employeeinfo
        where employee.uuid = employeeinfo.id
    </select>

    <select id="findByPage" resultType="com.officeAuto.ssm.model.EmployeeAndInfo">
        select employee.*,employeeInfo.*,job.name,dept.name
        from employee
        left join employeeInfo on employee.uuid=employeeInfo.id
        left join job on employee.uuid=job.employee
        left join dept  on dept.uuid=job.dept
        limit ${(currentPage-1)*pageSize},${(currentPage-1)*pageSize+pageSize}
    </select>

    <select id="findCount" resultType="java.lang.Integer">
        select count(*)
        from employee
    </select>

    <select id="findById" resultType="com.officeAuto.ssm.model.EmployeeAndInfo">
        select *
        from employee, employeeinfo
        where employee.uuid = #{id} and employeeinfo.id = employee.uuid
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer" >

    </delete>


    <delete id="delete">

    </delete>

    <insert id="insert" parameterType="com.officeAuto.ssm.model.EmployeeAndInfo">

    </insert>

    <update id="update" parameterType="com.officeAuto.ssm.model.EmployeeAndInfo">

    </update>

    <update id="updateImg">
        update employeeinfo
        set image = #{imgPath}
        where id = #{uuid}
    </update>

    <update id="updateInfoSelective">
        update employeeinfo
        <set>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=VARCHAR},
            </if>
            <if test="record.age != null">
                age = #{record.age,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{record.id}
    </update>

</mapper>