<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.officeAuto.ssm.dao.system.AnnounceDao" >

    <resultMap id="BaseResultMap" type="com.officeAuto.ssm.model.Announce">
        <result column="uuid" jdbcType="INTEGER" property="uuid" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="createtime" jdbcType="DATE" property="createtime" />
        <result column="dept" jdbcType="INTEGER" property="dept" />
        <result column="employee" jdbcType="INTEGER" property="employee" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.officeAuto.ssm.model.Announce">
        <result column="descript" jdbcType="LONGVARCHAR" property="descript" />
    </resultMap>
    <resultMap id="AnnounceDpet" type="com.officeAuto.ssm.model.AnnounceDpet" extends="ResultMapWithBLOBs">
        <association property="depart" javaType="com.officeAuto.ssm.model.Dept">
            <id column="dept_uuid" jdbcType="INTEGER" property="uuid" />
            <result column="name" jdbcType="VARCHAR" property="name" />
            <result column="dept_descript" jdbcType="LONGVARCHAR" property="descript" />
        </association>
    </resultMap>



    <select id="findByPage" resultType="com.officeAuto.ssm.model.Announce">
      select * from announce limit ${(currentPage-1)*pageSize},${(currentPage-1)*pageSize+pageSize}
    </select>

    <select id="findAll" resultType="com.officeAuto.ssm.model.Announce">
        select * from announce
    </select>

    <select id="findCount" resultType="java.lang.Integer">
        select count(*) from announce
    </select>

    <select id="findById" resultType="com.officeAuto.ssm.model.Announce">
        select * from announce where uuid=#{id}
    </select>

    <select id="findByPageQuery" parameterType="com.officeAuto.ssm.model.AnnounceQueryModel" resultType="com.officeAuto.ssm.model.Announce">
        select * from announce
        <if test="paraMap!=null">
            <where>
                uuid between
                <foreach collection="paraMap" item="item" separator="and">
                    <if test="item.queryAcount1">
                       ${item.queryAcount1}
                    </if>
                    <if test="item.queryAcount2">
                        and ${item.queryAcount2}
                    </if>
                </foreach>
            </where>
        </if>

    </select>

    <select id="getRecentAnnounce" resultType="com.officeAuto.ssm.model.Announce">
        select *
        from announce, dept
        where dept.name = #{deptName} and announce.dept = dept.uuid
        order by createtime desc
        limit 0, #{size}
    </select>

    <select id="getRecentAnnounceWithDept" resultMap="AnnounceDpet">
        select announce.*, dept.uuid "dept_uuid", dept.name, dept.descript "dept_descript"
        from announce, dept
        where dept.uuid = #{uuid} and announce.dept = dept.uuid
        order by announce.createtime, announce.uuid desc
        limit 0, #{size}
    </select>





    <select id="findAllWithDept" resultMap="AnnounceDpet">
        select distinct announce.createtime,dept.name,announce.title,announce.descript
        from employee,job,dept,announce
        where employee.uuid=job.employee and job.dept=dept.uuid and dept.uuid=announce.dept and employee.uuid=#{id}
        order by announce.createtime desc
        limit #{nowSize},1
    </select>





    <delete id="deleteById" parameterType="java.lang.Integer" >
        DELETE FROM announce WHERE uuid=#{id};
    </delete>


    <delete id="delete">
        delete from announce where uuid in
        <foreach collection="ids" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>

    <insert id="insert" parameterType="com.officeAuto.ssm.model.Announce">
        insert into announce
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="title != null" >
                title,
            </if>
            <if test="createtime != null" >
                createtime,
            </if>
            <if test="dept != null" >
                dept,
            </if>
            <if test="employee != null" >
                employee,
            </if>
            <if test="descript != null" >
                descript,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="title != null" >
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null" >
                #{createtime,jdbcType=DATE},
            </if>
            <if test="dept != null" >
                #{dept,jdbcType=INTEGER},
            </if>
            <if test="employee != null" >
                #{employee,jdbcType=INTEGER},
            </if>
            <if test="descript != null" >
                #{descript,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.officeAuto.ssm.model.Announce">

        update announce
        <set >
            <if test="createtime != null" >
                createtime = #{createtime,jdbcType=DATE},
            </if>
            <if test="title != null" >
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="dept != null" >
                dept = #{dept,jdbcType=INTEGER},
            </if>
            <if test="employee != null" >
                employee = #{employee,jdbcType=INTEGER},
            </if>
            <if test="descript != null" >
                descript = #{descript,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where uuid = #{uuid,jdbcType=INTEGER}
    </update>

</mapper>